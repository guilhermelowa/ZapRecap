name: ZapRecap CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      run: |
        cd client
        npm ci
    
    - name: Lint
      run: |
        cd client
        npm run lint
    
    - name: Build
      run: |
        cd client
        npm run build
    
    - name: Upload Frontend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: client/dist/
        retention-days: 1

  backend-tests:
    needs: [frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: fastapi-backend

    steps:
    - uses: actions/checkout@v4

    - name: Download Frontend Artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-dist
        path: static

    - name: Verify Frontend Artifacts
      run: |
        pwd
        echo "Current directory contents:"
        ls -la
        echo "Static directory contents:"
        mkdir -p static
        ls -la static/
        echo "Frontend artifacts verification:"
        test -d static && echo "Static folder exists" || echo "Static folder does not exist"
        find . -name "*" | grep -i "static"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Create virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest flake8
    
    - name: Run linting
      run: |
        flake8 .
    
    - name: Run backend tests
      run: |
        python -m pytest tests/

  deploy:
    needs: [backend-tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
    
    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: "zap-recap"
      if: env.HEROKU_API_KEY != ''
      run: |
        heroku container:login
        heroku container:push web -a $HEROKU_APP_NAME
        heroku container:release web -a $HEROKU_APP_NAME
